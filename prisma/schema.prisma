// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}




model Produtos{
  codigo Int @id @default(autoincrement())
  produto String
  tipoUnidade String
  setor String
  quantidade Float
  custoCompra Decimal @db.Decimal(18, 2)
  margemLucro Decimal @db.Decimal(18,2 )
  precoDeVenda Decimal @db.Decimal(18, 2)
  ativo String

  ItensVendas ItensVendas[]

  @@map("Produtos")
}


model Cliente{
  codigo Int @id @default(autoincrement())
  nome String
  numeroTelefone String
  ativo String

  

  Vendas Vendas[]
  Titulos Titulos[]

  @@map("Clientes")
}


model FormaDePagamento{
  codigo Int @id @default(autoincrement())
  nome String
  ativo String

  CondicaoPagamento CondicaoPagamento[]
  Vendas Vendas[]
  Titulos Titulos[]

  @@map("FormaDePagamento")

}

model CondicaoPagamento{
  codigo Int @id @default(autoincrement())
  descricao String
  codPagamento Int
  quantidadeParcela Int
  parcelaInicial Int
  intervaloParcelas Int

  FormaPagamento FormaDePagamento @relation(fields : [codPagamento], references: [codigo])
  Vendas Vendas[]
  Titulos Titulos[]

  @@map("CondicaoDePagamento")
}



model Vendas{
  codigo Int @id @default(autoincrement())
  codCliente Int
  nomeCliente String
  CodFormadePagamento Int
  CodCondicaoPagamento Int
  valorProdutos Decimal @db.Decimal(18, 2)
  desconto Int
  valorTotaldeVenda Decimal @db.Decimal(18, 2)
  dataHora DateTime @default(now())

  ItensVendas ItensVendas[]
  Titulos Titulos[]

  Cliente Cliente @relation(fields: [codCliente], references: [codigo])
  FormaDePagamento FormaDePagamento @relation(fields: [CodFormadePagamento], references: [codigo])
  CondicaoPagamento CondicaoPagamento @relation(fields: [CodCondicaoPagamento], references: [codigo])

  @@map("Vendas")
}


model ItensVendas {
  codigo Int @id @default(autoincrement())
  codVenda Int
  codProduto Int
  nomeProduto String
  custoProduto Decimal @db.Decimal(18, 2)
  quantidade Float
  custoUnitariodeVenda Decimal @db.Decimal(18, 2)
  desconto Decimal @db.Decimal(18, 2)
  valorTotaldeVenda Decimal @db.Decimal(18, 2)

  Venda Vendas @relation(fields: [codVenda], references: [codigo])
  Produto Produtos @relation(fields: [codProduto], references: [codigo])

  @@map("ItensVendas")
}



model Titulos{
  codigo Int @id @default(autoincrement())
  codVenda Int
  codFormadePagamento Int
  codCondicaoPagamento Int
  codCliente Int
  nomdeCliente String
  valorTitulo Decimal @db.Decimal(18, 2)
  emissao DateTime
  vencimento DateTime

  

  Venda Vendas @relation(fields: [codVenda], references: [codigo])
  FormaDePagamento FormaDePagamento @relation(fields: [codFormadePagamento], references: [codigo])
  CondicaoPagamento CondicaoPagamento @relation(fields: [codCondicaoPagamento], references: [codigo])
  Cliente Cliente @relation(fields: [codCliente], references: [codigo])

  @@map("Titulos")
}